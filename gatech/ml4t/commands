xhost +
ssh -X tpeng38@buffet03.cc.gatech.edu

PYTHONPATH=../:. python grade_analysis.py

scp -r /home/tao/pt/gatech/ml4t/ML4T_2018Fall tpeng38@buffet03.cc.gatech.edu:/home/tpeng38

==
Use pandas in my Thinkpad computer:

export PATH=~/anaconda2/bin:$PATH
source activate homework1
python file_name.py

==
optimize_something:

scp /home/tao/pt/gatech/ml4t/ML4T_2018Fall/optimize_something/grade_optimization.py tpeng38@buffet03.cc.gatech.edu:/home/tpeng38/ML4T_2018Fall/optimize_something

scp /home/tao/pt/gatech/ml4t/ML4T_2018Fall/optimize_something/a.py tpeng38@buffet03.cc.gatech.edu:/home/tpeng38/ML4T_2018Fall/optimize_something

PYTHONPATH=..:. python optimization.py

PYTHONPATH=../:. python grade_optimization.py

==
assess_learners:

What to turn in
Be sure to follow these instructions diligently!

Via Canvas, submit as individual files.

Your code as RTLearner.py, DTLearner.py, InsaneLearner.py, BagLearner.py, and testlearner.py.
Your report as report.pdf
Unlimited resubmissions are allowed up to the deadline for the project.

--
testlearner.py added under "what to turn in." This should be the code that generates your charts for submission.

--
Note that all charts you provide must be generated in Python (in testlearner.py), and you must submit the python code you used to generate the plots.

--
Experiments and report (50 points)

Create a report that addresses the following questions. Use 11pt font and single spaced lines. We expect that a complete report addressing all the criteria would be at least 3 pages. It should be no longer than 3000 words. To encourage conciseness we will deduct 10 points if the report is too long. The report should be submitted as report.pdf in PDF format. Include charts (not tables) to support each of your answers.

Does overfitting occur with respect to leaf_size? Consider the dataset istanbul.csv with DTLearner. For which values of leaf_size does overfitting occur? Use RMSE as your metric for assessing overfitting. Support your assertion with graphs/charts. (Don't use bagging).

Can bagging reduce or eliminate overfitting with respect to leaf_size? Again consider the dataset istanbul.csv with DTLearner. To investigate this choose a fixed number of bags to use and vary leaf_size to evaluate. Provide charts to validate your conclusions. Use RMSE as your metric.

Quantitatively compare "classic" decision trees (DTLearner) versus random trees (RTLearner). In which ways is one method better than the other? Provide at least two quantitative measures. Note that for this part of the report you must conduct new experiments, don't use the results of the experiments above for this.

Note that all charts you provide must be generated in Python (in testlearner.py), and you must submit the python code you used to generate the plots.

--
./upload.sh

PYTHONPATH=../:. python grade_learners.py
PYTHONPATH=../:. python testlearner.py Data/Istanbul.csv