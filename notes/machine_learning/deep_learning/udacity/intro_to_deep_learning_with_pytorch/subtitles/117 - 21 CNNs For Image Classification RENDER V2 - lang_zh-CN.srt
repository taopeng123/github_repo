1
00:00:00,000 --> 00:00:02,970
假设我们想分类一个图像

2
00:00:02,970 --> 00:00:06,809
我们可以使用深度学习架构以几种不同的方式完成此任务

3
00:00:06,809 --> 00:00:10,780
假设输入层之后是一系列卷积层

4
00:00:10,780 --> 00:00:14,715
这些图层将发现图像中的空间层次图案

5
00:00:14,715 --> 00:00:18,360
第一个过滤器层级会查看输入图像中的图案

6
00:00:18,360 --> 00:00:22,240
第二层会查看上个卷积层中的图案 以此类推

7
00:00:22,240 --> 00:00:27,540
每个卷积层都需要指定大量超参数

8
00:00:27,540 --> 00:00:30,870
卷积层的第一个和第二个输入

9
00:00:30,870 --> 00:00:34,430
分别是输入的深度和输出的期望深度

10
00:00:34,430 --> 00:00:39,420
例如 彩色图像的输入深度是 3 表示 RGB 通道

11
00:00:39,420 --> 00:00:44,230
我们或许希望在这个卷积层中生成 16 个不同的过滤图像

12
00:00:44,230 --> 00:00:48,150
接下来定义决定卷积层的过滤器大小

13
00:00:48,150 --> 00:00:51,580
通常是正方形

14
00:00:51,580 --> 00:00:55,490
并且大小从最小的 2x2 到 7x7（针对大型图像）

15
00:00:55,490 --> 00:00:58,445
我选择使用 3x3 过滤器

16
00:00:58,445 --> 00:01:00,150
步长通常设为 1

17
00:01:00,150 --> 00:01:03,290
很多框架将此值设为默认值

18
00:01:03,290 --> 00:01:05,560
所以你可能不需要输入此值

19
00:01:05,560 --> 00:01:09,275
对于填充 如果设置填充后卷积层的宽和高

20
00:01:09,275 --> 00:01:11,450
与上个层级的一样

21
00:01:11,450 --> 00:01:13,990
那么你会获得更好的效果

22
00:01:13,990 --> 00:01:16,085
对于 3x3 过滤器 它可以在图像上

23
00:01:16,085 --> 00:01:21,220
几乎完美地居中 但是会忽略一个边界像素

24
00:01:21,220 --> 00:01:22,965
所以填充设为 1

25
00:01:22,965 --> 00:01:26,470
要了解不同的填充情形 请参阅下方内容

26
00:01:26,470 --> 00:01:30,410
在决定卷积层的深度或过滤器数量时

27
00:01:30,410 --> 00:01:33,680
通常我们会按顺序增加过滤器数量

28
00:01:33,680 --> 00:01:36,860
所以第一个卷积层可能有 16 个过滤器

29
00:01:36,860 --> 00:01:41,435
第二层的输入是该深度 生成的层级深度是 32

30
00:01:41,435 --> 00:01:44,795
第三层的深度是64 以此类推

31
00:01:44,795 --> 00:01:46,810
在每个卷积层之后

32
00:01:46,810 --> 00:01:49,320
我们将应用 ReLU 激活函数

33
00:01:49,320 --> 00:01:51,080
如果按照这个规律

34
00:01:51,080 --> 00:01:53,720
我们将逐渐增加数组的深度

35
00:01:53,720 --> 00:01:56,765
但是不会修改高度和宽度

36
00:01:56,765 --> 00:01:59,480
输入和这一系列的层级一样

37
00:01:59,480 --> 00:02:01,450
高和宽是 32

38
00:02:01,450 --> 00:02:07,480
但是深度从输入层深度 3 增加到了 16 再到 32 再到 64

39
00:02:07,480 --> 00:02:10,380
没错 我们想要增加深度

40
00:02:10,380 --> 00:02:15,215
但是我们还想降低高和宽并丢弃一些空间信息

41
00:02:15,215 --> 00:02:17,855
这时候最大池化层就派上用场了

42
00:02:17,855 --> 00:02:22,250
它们通常位于这一系列图层中的每个/每两个卷积层之后

43
00:02:22,250 --> 00:02:26,990
在这个示例中 每个卷积层之后都有一个最大池化层

44
00:02:26,990 --> 00:02:28,820
要定义最大池化层

45
00:02:28,820 --> 00:02:31,685
只需定义过滤器大小和步长

46
00:02:31,685 --> 00:02:35,960
最常见的设置是过滤器大小为 2 步长为 2

47
00:02:35,960 --> 00:02:37,610
这样就使得

48
00:02:37,610 --> 00:02:41,110
x,y 维度变成上一层级的一半

49
00:02:41,110 --> 00:02:45,590
以这种方式组合使用卷积层和最大池化层后

50
00:02:45,590 --> 00:02:50,750
我们就能获得深度很深并且 x,y 维度很小的数组

51
00:02:50,750 --> 00:02:55,190
接下来 我们会将这个输出结果与全连接层相连

52
00:02:55,190 --> 00:02:59,880
看看当输入经过这些层级之后 到底发生了什么

