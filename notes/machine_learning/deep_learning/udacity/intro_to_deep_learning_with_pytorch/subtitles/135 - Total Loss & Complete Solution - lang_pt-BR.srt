1
00:00:00,220 --> 00:00:02,378
Esta é a minha solução final.

2
00:00:02,411 --> 00:00:04,872
Testei vários valores
para os pesos de estilo,

3
00:00:04,905 --> 00:00:06,962
dando mais peso
às camadas iniciais.

4
00:00:07,522 --> 00:00:11,670
Mantive os pesos de conteúdo
e de estilo como 1 e 1x10/6.

5
00:00:11,703 --> 00:00:14,120
Depois iniciei
o loop de iteração.

6
00:00:14,153 --> 00:00:16,166
Obtive as características
da imagem-alvo

7
00:00:16,199 --> 00:00:18,207
através da função
get_features.

8
00:00:18,240 --> 00:00:19,906
Depois defini
a perda de conteúdo

9
00:00:19,939 --> 00:00:23,341
usando as características
da imagem-alvo da camada conv4_2

10
00:00:23,374 --> 00:00:25,929
e da imagem de conteúdo
da mesma camada.

11
00:00:25,962 --> 00:00:28,591
Então comparei
a representação do conteúdo

12
00:00:28,624 --> 00:00:30,725
da imagem de conteúdo
com a da imagem-alvo.

13
00:00:30,758 --> 00:00:32,311
Obtive a distância
entre as duas

14
00:00:32,344 --> 00:00:34,529
e calculei
a diferença quadrática média.

15
00:00:34,801 --> 00:00:36,578
Depois defini
a perda de estilo.

16
00:00:36,611 --> 00:00:40,157
Primeiro peguei as camadas
no dicionário dos pesos de estilo.

17
00:00:40,190 --> 00:00:43,825
Calculei as características-alvo
de cada camada.

18
00:00:43,858 --> 00:00:47,228
Isto é o que aconteceria
se a imagem-alvo passasse

19
00:00:47,261 --> 00:00:51,245
pela nossa rede VGG-19
e chegasse a conv1_1.

20
00:00:51,278 --> 00:00:53,062
O output
dessa camada convolucional

21
00:00:53,095 --> 00:00:55,739
é então alimentado
para a função gram_matrix.

22
00:00:55,772 --> 00:00:58,437
Ela nos fornecerá
a matriz target_gram.

23
00:00:58,738 --> 00:01:01,763
Anteriormente, calculei o dicionário
das matrizes de Gram

24
00:01:01,796 --> 00:01:03,499
da imagem de estilo.

25
00:01:03,532 --> 00:01:05,778
Obtive a matriz de Gram
da imagem de estilo

26
00:01:05,811 --> 00:01:07,638
acessando a camada.

27
00:01:07,671 --> 00:01:09,736
Aqui calculei
a diferença quadrática média

28
00:01:09,769 --> 00:01:12,680
entre as matrizes de Gram
das imagens de estilo e de alvo.

29
00:01:12,713 --> 00:01:14,558
Isso é feito com cada camada,

30
00:01:14,591 --> 00:01:18,810
de acordo com os pesos definidos
no dicionário de pesos de estilo.

31
00:01:18,843 --> 00:01:21,401
Por exemplo,
para a 1ª camada, conv1_1,

32
00:01:21,434 --> 00:01:25,048
multiplicarei a diferença
entre as matrizes de estilo e alvo

33
00:01:25,081 --> 00:01:26,221
por 1.

34
00:01:26,254 --> 00:01:28,230
Depois vou adicionar
layer_style_loss

35
00:01:28,263 --> 00:01:30,269
à style_loss acumulada

36
00:01:30,302 --> 00:01:32,989
e dividir o resultado
pelo tamanho da camada.

37
00:01:33,022 --> 00:01:36,503
Isto vai normalizar
a perda de estilo da camada.

38
00:01:36,536 --> 00:01:38,125
Então, no final
deste loop for,

39
00:01:38,158 --> 00:01:43,076
somarei todas as perdas de estilo
das cinco camadas convolucionais.

40
00:01:43,109 --> 00:01:45,208
Por fim, posso calcular
a perda total,

41
00:01:45,241 --> 00:01:48,643
que é só a soma entre as perdas
de conteúdo e de estilo,

42
00:01:48,676 --> 00:01:51,352
multiplicada
pelos pesos respectivos.

43
00:01:51,385 --> 00:01:53,395
A perda de conteúdo
é multiplicada por 1,

44
00:01:53,428 --> 00:01:56,639
e a perda de estilo
é multiplicada por 1x10/6.

45
00:01:57,133 --> 00:02:00,325
É isso. Executei este loop
por cerca de 2.000 iterações,

46
00:02:00,358 --> 00:02:02,173
mas mostrei imagens
intermitentemente

47
00:02:02,206 --> 00:02:03,374
a cada 400 iterações.

48
00:02:03,716 --> 00:02:06,095
Imprimi a perda,
que foi bem grande,

49
00:02:06,128 --> 00:02:09,807
e percebi logo a diferença
na minha nova imagem de polvo.

50
00:02:09,840 --> 00:02:11,990
Em seguida,
ao fim das 2.000 iterações,

51
00:02:12,023 --> 00:02:15,705
coloquei a imagem de conteúdo
e a imagem-alvo lado a lado.

52
00:02:15,738 --> 00:02:19,144
Podemos ver que a imagem-alvo
ainda se parece muito com um polvo.

53
00:02:19,177 --> 00:02:21,975
Aliás, eu podia ter estilizado
ainda mais a imagem,

54
00:02:22,008 --> 00:02:24,957
mas ela também contém
as cores e uma textura pincelada

55
00:02:24,990 --> 00:02:28,006
da pintura do Hockney
que usei como a imagem de estilo.

56
00:02:28,039 --> 00:02:30,357
Com este notebook,
você pode escolher

57
00:02:30,390 --> 00:02:33,763
o grupo de imagens
de conteúdo e estilo que quiser.

58
00:02:33,796 --> 00:02:37,683
Há algumas imagens de exemplo
na pasta deste notebook para você,

59
00:02:37,716 --> 00:02:39,570
mas, se executá-lo
num ambiente local,

60
00:02:39,603 --> 00:02:41,649
pode combinar
as imagens que quiser.

61
00:02:41,682 --> 00:02:44,018
Se decidir criar
suas próprias imagens,

62
00:02:44,051 --> 00:02:46,330
sugiro que as compartilhe
nas mídias sociais.

63
00:02:46,363 --> 00:02:48,105
Eu adoraria vê-las.

