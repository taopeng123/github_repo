1
00:00:00,231 --> 00:00:04,459
Nesta aula, analisamos 2 novos tipos
de camadas de redes neurais.

2
00:00:04,492 --> 00:00:06,516
Começamos
com as camadas convolucionais,

3
00:00:06,549 --> 00:00:08,709
que detectam os padrões locais
de uma imagem

4
00:00:08,742 --> 00:00:10,807
através de uma série
de filtros de imagem.

5
00:00:10,840 --> 00:00:13,848
Vimos como, tipicamente,
uma função de ativação ReLU

6
00:00:13,881 --> 00:00:15,843
é aplicada
ao output desses filtros,

7
00:00:15,876 --> 00:00:18,068
padronizando
os valores de output.

8
00:00:18,101 --> 00:00:20,347
Depois falamos
das camadas max pooling,

9
00:00:20,380 --> 00:00:22,401
que surgem
após as camadas convolucionais

10
00:00:22,434 --> 00:00:25,225
para reduzir a dimensionalidade
dos arrays de input.

11
00:00:25,258 --> 00:00:27,778
Essas novas camadas
e as totalmente conectadas,

12
00:00:27,811 --> 00:00:29,053
que você já conhece,

13
00:00:29,086 --> 00:00:32,249
muitas vezes são as únicas
que você verá numa CNN.

14
00:00:32,282 --> 00:00:34,739
Neste vídeo, veremos
como organizar essas camadas

15
00:00:34,772 --> 00:00:37,290
para criar
uma arquitetura de CNN completa.

16
00:00:37,613 --> 00:00:40,970
Nós vamos nos concentrar
nas CNNs de classificação de imagem.

17
00:00:41,003 --> 00:00:44,931
Neste caso, a CNN precisa aceitar
um array de imagem como input.

18
00:00:44,964 --> 00:00:47,716
Como vamos trabalhar
com imagens reais e confusas,

19
00:00:47,749 --> 00:00:50,134
há um complicador
do qual ainda não falamos.

20
00:00:50,490 --> 00:00:53,657
Se eu coletar
milhões de imagens da internet,

21
00:00:53,690 --> 00:00:57,234
é bem provável que elas terão
tamanhos diferentes.

22
00:00:57,267 --> 00:00:59,814
Assim como as MLPs,
as CNNs que nós mostraremos

23
00:00:59,847 --> 00:01:02,428
terão que ter um input
de tamanho fixo.

24
00:01:02,461 --> 00:01:03,988
Então definiremos um tamanho

25
00:01:04,021 --> 00:01:08,472
e redimensionaremos todas as imagens
para esse tamanho, antes de tudo.

26
00:01:08,600 --> 00:01:11,217
Essa é uma etapa
de pré-processamento,

27
00:01:11,250 --> 00:01:15,455
como a normalização e a conversão
dos dados em tensor.

28
00:01:15,488 --> 00:01:18,960
É comum redimensionar
as imagens como um quadrado,

29
00:01:18,993 --> 00:01:21,905
com uma dimensão espacial
igual à potência de 2

30
00:01:21,938 --> 00:01:25,159
ou a um número divisível
por uma grande potência de 2.

31
00:01:25,192 --> 00:01:26,314
Nos próximos vídeos,

32
00:01:26,347 --> 00:01:28,611
usaremos um conjunto de dados
contendo imagens

33
00:01:28,644 --> 00:01:32,491
que foram redimensionadas
para ter 32x32 pixels.

34
00:01:32,524 --> 00:01:35,166
Toda imagem é interpretada
pelo computador

35
00:01:35,199 --> 00:01:37,066
como um array tridimensional.

36
00:01:37,099 --> 00:01:40,115
As imagens coloridas têm
largura e altura, em pixels,

37
00:01:40,148 --> 00:01:42,687
além de canais de cor
vermelho, verde e azul

38
00:01:42,720 --> 00:01:45,334
que correspondem
a uma profundidade de 3.

39
00:01:45,367 --> 00:01:47,952
As imagens em escala de cinza
são bidimensionais,

40
00:01:47,985 --> 00:01:50,865
mas também têm
largura e altura,

41
00:01:50,898 --> 00:01:52,777
e a profundidade é 1.

42
00:01:52,810 --> 00:01:56,037
Em ambos os casos, nas imagens
coloridas ou em escala de cinza,

43
00:01:56,070 --> 00:01:58,715
o array de input sempre será
bem mais alto e largo

44
00:01:58,748 --> 00:02:00,238
do que profundo.

45
00:02:00,271 --> 00:02:04,188
Nossa arquitetura de CNN será criada
com objetivo de pegar o array

46
00:02:04,221 --> 00:02:07,811
e torná-lo gradualmente
mais profundo do que alto ou largo.

47
00:02:08,132 --> 00:02:09,814
Usaremos
as camadas convolucionais

48
00:02:09,847 --> 00:02:13,001
para tornar o array mais profundo
conforme ele passar pela rede.

49
00:02:13,034 --> 00:02:17,475
E usaremos as camadas max pooling
para reduzir as dimensões XY.

50
00:02:17,508 --> 00:02:18,926
Ao se tornar mais profunda,

51
00:02:18,959 --> 00:02:22,515
a rede extrai características
e padrões cada vez mais complexos,

52
00:02:22,548 --> 00:02:26,111
que ajudam a identificar
o conteúdo e os objetos da imagem,

53
00:02:26,144 --> 00:02:28,651
e descartam
algumas informações espaciais

54
00:02:28,684 --> 00:02:31,536
sobre características,
como um fundo suave,

55
00:02:31,569 --> 00:02:33,632
que não ajudam
a identificar a imagem.

56
00:02:34,186 --> 00:02:35,407
Para ver a rede em ação,

57
00:02:35,440 --> 00:02:39,448
veremos em detalhe
uma CNN de classificação de imagem.

