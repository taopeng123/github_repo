1
00:00:00,000 --> 00:00:03,990
当我们设计分类图像中对象的算法时

2
00:00:03,990 --> 00:00:07,685
我们需要处理很多不相关的信息

3
00:00:07,685 --> 00:00:10,320
我们只希望算法能判断

4
00:00:10,320 --> 00:00:13,565
某个对象是否在图像中

5
00:00:13,565 --> 00:00:16,225
对象的大小并不重要

6
00:00:16,225 --> 00:00:17,765
角度也不重要

7
00:00:17,765 --> 00:00:20,905
如果我将它一直移到图像的右侧

8
00:00:20,905 --> 00:00:23,669
它依然是一个牛油果图像

9
00:00:23,669 --> 00:00:27,330
换句话说 我们希望算法

10
00:00:27,330 --> 00:00:31,245
学习图像的不变性表示

11
00:00:31,245 --> 00:00:36,490
我们不希望算法因为对象的大小而改变预测值

12
00:00:36,490 --> 00:00:39,355
这称之为尺度不变性

13
00:00:39,355 --> 00:00:43,335
同理 我们不希望对象的角度有影响

14
00:00:43,335 --> 00:00:46,385
这称之为旋转不变性

15
00:00:46,385 --> 00:00:50,880
如果往左移或往右移图像

16
00:00:50,880 --> 00:00:53,050
它依然是牛油果图像

17
00:00:53,050 --> 00:00:56,350
这称之为平移不变性

18
00:00:56,350 --> 00:01:02,115
CNN 本身的确具有一些平移不变性

19
00:01:02,115 --> 00:01:07,170
要查看这种不变性 首先需要运用到我们已经学过的如何计算最大池化层的知识

20
00:01:07,170 --> 00:01:09,710
在每个窗口中

21
00:01:09,710 --> 00:01:13,380
我们都取其中的最大像素值

22
00:01:13,380 --> 00:01:17,245
这个最大值可能会出现在窗口的任何位置

23
00:01:17,245 --> 00:01:20,180
如果将图像向左 向右

24
00:01:20,180 --> 00:01:23,765
向上或向下平移一点

25
00:01:23,765 --> 00:01:25,815
最大池化节点的值将不变

26
00:01:25,815 --> 00:01:30,170
只要最大值保持在该窗口中即可

27
00:01:30,170 --> 00:01:33,290
按顺序应用很多最大池化层

28
00:01:33,290 --> 00:01:37,640
每个都位于一个卷积层之后的效果是

29
00:01:37,640 --> 00:01:40,770
我们可以

30
00:01:40,770 --> 00:01:42,110
向左 向上 向下

31
00:01:42,110 --> 00:01:43,550
平移对象很大的幅度

32
00:01:43,550 --> 00:01:46,870
网络依然能识别对象

33
00:01:46,870 --> 00:01:49,925
这并不是很重要的问题

34
00:01:49,925 --> 00:01:53,790
计算机只看到像素矩阵

35
00:01:53,790 --> 00:01:56,770
调整对象在图像中的尺度

36
00:01:56,770 --> 00:02:00,895
旋转角度或位置对像素值有很大的影响

37
00:02:00,895 --> 00:02:05,660
作为人类 我们能够非常清晰地看到图像中的区别

38
00:02:05,660 --> 00:02:10,090
但是如果只提供相应的数字数组 该怎么办？

39
00:02:10,090 --> 00:02:12,710
幸运的是 有一个技巧非常适合

40
00:02:12,710 --> 00:02:16,339
使算法更加具有统计不变性

41
00:02:16,339 --> 00:02:19,700
但是有点像在作弊

42
00:02:19,700 --> 00:02:21,935
原理是

43
00:02:21,935 --> 00:02:25,745
如果你希望 CNN 具有旋转不变性

44
00:02:25,745 --> 00:02:28,730
那么你可以通过随机旋转训练图像

45
00:02:28,730 --> 00:02:33,180
向训练集中添加一些图像

46
00:02:33,180 --> 00:02:35,985
如果希望更加平移不变性

47
00:02:35,985 --> 00:02:39,350
那么可以通过随机平移训练图像

48
00:02:39,350 --> 00:02:42,925
添加新的图像

49
00:02:42,925 --> 00:02:44,240
这么操作时

50
00:02:44,240 --> 00:02:48,640
我们说通过增强数据扩大了训练集

51
00:02:48,640 --> 00:02:53,390
数据增强还有助于避免过拟合

52
00:02:53,390 --> 00:02:57,595
这是因为模型见到了很多新的图像

53
00:02:57,595 --> 00:03:00,485
所以它应该更能泛化

54
00:03:00,485 --> 00:03:04,150
并且在测试数据集上的表现更好

55
00:03:04,150 --> 00:03:09,380
我们将增强上个视频中的 CIFAR-10 数据集中的训练数据

56
00:03:09,380 --> 00:03:12,250
看看能否提高测试准确率

57
00:03:12,250 --> 00:03:16,950
我们将使用 Jupiter notebook 你可以在下方下载该 notebook

