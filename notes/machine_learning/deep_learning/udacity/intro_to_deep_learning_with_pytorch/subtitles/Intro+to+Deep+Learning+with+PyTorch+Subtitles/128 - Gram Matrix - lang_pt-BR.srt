1
00:00:00,016 --> 00:00:02,673
Para garantir que a imagem-alvo
tenha o mesmo conteúdo

2
00:00:02,706 --> 00:00:03,961
da imagem de conteúdo,

3
00:00:03,994 --> 00:00:06,447
criamos uma fórmula
para medir a perda de conteúdo

4
00:00:06,480 --> 00:00:09,778
que compara a representação
do conteúdo das duas imagens.

5
00:00:09,811 --> 00:00:11,469
Agora queremos fazer
a mesma coisa

6
00:00:11,502 --> 00:00:15,627
para as representações do estilo
da imagem-alvo e imagem de estilo.

7
00:00:15,660 --> 00:00:17,641
A representação do estilo
de uma imagem

8
00:00:17,674 --> 00:00:20,349
implica em ver as correlações
entre as características

9
00:00:20,382 --> 00:00:23,533
das camadas individuais
da rede VGG-19.

10
00:00:23,566 --> 00:00:25,231
Ou seja, ver as semelhanças

11
00:00:25,264 --> 00:00:27,543
entre as características
de uma única camada.

12
00:00:27,576 --> 00:00:31,579
Essas semelhanças incluem as cores
e as texturas contidas nessa camada.

13
00:00:31,612 --> 00:00:34,086
Em geral, encontramos
características semelhantes

14
00:00:34,119 --> 00:00:35,996
em várias camadas da rede.

15
00:00:36,325 --> 00:00:39,920
Ao incluir a correlação entre várias
camadas de tamanhos diferentes,

16
00:00:39,953 --> 00:00:42,784
podemos obter uma representação
multiescalar do estilo

17
00:00:42,817 --> 00:00:44,299
da imagem de input

18
00:00:44,332 --> 00:00:47,638
que capte características de estilo
pequenas e grandes.

19
00:00:47,671 --> 00:00:49,751
A representação do estilo
é calculada

20
00:00:49,784 --> 00:00:53,514
conforme a imagem se move pela rede
e passa pela 1ª camada convolucional

21
00:00:53,547 --> 00:00:58,959
de todas as 5 pilhas,
conv1_1, conv2_1, até conv5_1.

22
00:00:58,992 --> 00:01:02,827
E as correlações em cada camada são
definidas por uma matriz de Gram.

23
00:01:02,860 --> 00:01:05,685
A matriz resulta
de algumas operações.

24
00:01:05,718 --> 00:01:08,408
É fácil de entendê-la
neste exemplo simples.

25
00:01:08,441 --> 00:01:11,081
Digamos que vamos começar
com uma imagem 4x4

26
00:01:11,114 --> 00:01:13,476
e envolvê-la
com 8 filtros de imagem distintos,

27
00:01:13,509 --> 00:01:15,447
para criar
uma camada convolucional.

28
00:01:15,480 --> 00:01:17,778
Essa camada terá
altura e largura igual a 4

29
00:01:17,811 --> 00:01:19,324
e profundidade igual a 8.

30
00:01:19,357 --> 00:01:22,002
Ao pensar na representação
do estilo dessa camada,

31
00:01:22,035 --> 00:01:24,299
diremos que ela tem
8 mapas de características

32
00:01:24,332 --> 00:01:26,983
cujas relações entre eles
queremos descobrir.

33
00:01:27,016 --> 00:01:29,194
O 1º passo para calcular
a matriz de Gram

34
00:01:29,227 --> 00:01:31,770
será vetorizar os valores
dessa camada.

35
00:01:31,803 --> 00:01:33,751
Isso é bem parecido
com o que você viu

36
00:01:33,784 --> 00:01:35,590
no caso da vetorização
de uma imagem

37
00:01:35,623 --> 00:01:38,130
para que ela fosse detectada
por uma MLP.

38
00:01:38,163 --> 00:01:40,671
Os 4 valores da 1ª linha
do mapa de características

39
00:01:40,704 --> 00:01:42,725
serão os 4 primeiros valores
de um vetor

40
00:01:42,758 --> 00:01:44,251
cujo comprimento será 16.

41
00:01:44,284 --> 00:01:47,795
A última linha definirá
os 4 últimos valores do vetor.

42
00:01:47,828 --> 00:01:50,660
Ao achatar as dimensões XY
dos mapas de características,

43
00:01:50,693 --> 00:01:53,164
convertemos
uma camada convolucional em 3-D

44
00:01:53,197 --> 00:01:55,608
numa matriz de valores
em 2-D.

45
00:01:55,641 --> 00:01:59,471
O próximo passo é multiplicar
esta matriz por sua transposta,

46
00:01:59,504 --> 00:02:02,096
ou seja, multiplicar
as características de cada mapa

47
00:02:02,129 --> 00:02:04,049
para obter a matriz de Gram.

48
00:02:04,082 --> 00:02:06,909
Essa operação trata cada valor
do mapa de características

49
00:02:06,942 --> 00:02:08,632
como uma amostra individual,

50
00:02:08,665 --> 00:02:11,167
não relacionada no espaço
com outros valores.

51
00:02:11,200 --> 00:02:14,760
A matriz de Gram resultante
contém informações não localizadas

52
00:02:14,793 --> 00:02:15,963
sobre a camada.

53
00:02:15,996 --> 00:02:19,312
São informações
que continuam presentes

54
00:02:19,345 --> 00:02:21,899
mesmo que a imagem
seja deslocada no espaço.

55
00:02:21,932 --> 00:02:25,794
Por exemplo, se a rede não detectar
o conteúdo de uma imagem filtrada,

56
00:02:25,827 --> 00:02:28,489
ainda assim você verá
cores e texturas vistosas,

57
00:02:28,522 --> 00:02:29,750
ou seja, o estilo.

58
00:02:29,783 --> 00:02:32,939
Por fim, obtemos
uma matriz de Gram quadrada,

59
00:02:32,972 --> 00:02:36,310
cujos valores indicam as semelhanças
entre as camadas.

60
00:02:36,343 --> 00:02:38,484
Então G, linha 4 e coluna 2,

61
00:02:38,517 --> 00:02:40,816
conterá o valor
que indica a semelhança

62
00:02:40,849 --> 00:02:43,807
entre o 4º e o 2º
mapas de características da camada.

63
00:02:43,840 --> 00:02:46,311
É importante lembrar
que as dimensões desta matriz

64
00:02:46,344 --> 00:02:48,788
só estão relacionadas
com o número de mapas

65
00:02:48,821 --> 00:02:50,458
da camada convolucional.

66
00:02:50,491 --> 00:02:53,724
Elas não dependem das dimensões
da imagem de input.

67
00:02:53,757 --> 00:02:56,991
Devo lembrar que a matriz de Gram
é só um recurso matemático

68
00:02:57,024 --> 00:03:00,544
para representar a ideia
de estilos distintos compartilhados.

69
00:03:00,577 --> 00:03:03,314
O estilo por si só
é uma ideia abstrata,

70
00:03:03,347 --> 00:03:06,879
mas a matriz de Gram é o recurso
mais usado para representá-lo.

71
00:03:06,912 --> 00:03:09,513
Sabendo que a matriz de Gram
contém informações

72
00:03:09,546 --> 00:03:11,336
sobre o estilo de uma camada,

73
00:03:11,369 --> 00:03:13,128
podemos calcular
uma perda de estilo

74
00:03:13,161 --> 00:03:16,521
que compare o estilo da imagem-alvo
com o da imagem de estilo.

