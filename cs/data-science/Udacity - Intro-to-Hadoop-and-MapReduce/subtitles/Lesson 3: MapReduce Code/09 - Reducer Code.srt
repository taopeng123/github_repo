1
00:00:00,310 --> 00:00:02,980
So here's the reducer code. Let's step through it. We'll

2
00:00:02,980 --> 00:00:06,689
start by setting up a couple of variables. Sales total,

3
00:00:06,689 --> 00:00:09,420
which we'll keep the running total, is initialized to 0.

4
00:00:09,420 --> 00:00:12,700
Because we haven't read any keys yet, old key starts at

5
00:00:12,700 --> 00:00:15,790
none. Then we start reading from standard input. As with

6
00:00:15,790 --> 00:00:18,890
the mappers we receive a line at a time that's tabbed

7
00:00:18,890 --> 00:00:22,290
eliminated. In this case we expect a store name, a

8
00:00:22,290 --> 00:00:25,350
tab, and one of the sales. So we'll strip out the

9
00:00:25,350 --> 00:00:28,670
new line, separate the value and the key by

10
00:00:28,670 --> 00:00:31,395
tab. That should give us two items which we'll store

11
00:00:31,395 --> 00:00:34,370
in an array called data. If we don't have two

12
00:00:34,370 --> 00:00:37,870
items, something strange has happened so we'll skip that line,

13
00:00:37,870 --> 00:00:39,830
but that should never be the case. Because we know

14
00:00:39,830 --> 00:00:42,390
that mappers send us the data in this format. For

15
00:00:42,390 --> 00:00:45,130
the sake of clarity, we'll store the two items in

16
00:00:45,130 --> 00:00:50,130
the array into variables. ThisKey will get the store name,

17
00:00:50,130 --> 00:00:54,340
thisSale, the value. So here is the tricky part. We want to

18
00:00:54,340 --> 00:00:56,860
know if the key has changed since the last row we

19
00:00:56,860 --> 00:01:00,560
read. So we'll check if oldKey is even set, because if

20
00:01:00,560 --> 00:01:03,140
it's not, then this is the first line we're reading. And if

21
00:01:03,140 --> 00:01:05,230
it is, we'll see if it's different to the key we

22
00:01:05,230 --> 00:01:08,020
just read in. If that's true, then the key has just

23
00:01:08,020 --> 00:01:11,940
changed. In our example data, we had just switched from the

24
00:01:11,940 --> 00:01:15,190
Miami row to the New York City row. So now we need

25
00:01:15,190 --> 00:01:18,290
to write out the result. Which'll be key, which

26
00:01:18,290 --> 00:01:21,690
is the store name, a tab and the sales total

27
00:01:21,690 --> 00:01:24,890
for that store. Then we reset sales total back

28
00:01:24,890 --> 00:01:28,570
to 0. Now for every row that we process, we'll

29
00:01:28,570 --> 00:01:31,250
set oldKey to the key we are working on,

30
00:01:31,250 --> 00:01:35,210
then add the current sale to the running total. And

31
00:01:35,210 --> 00:01:38,450
then we'll loop back to the next row. Eventually, we'll

32
00:01:38,450 --> 00:01:40,190
run out of data, which will take us out of

33
00:01:40,190 --> 00:01:41,790
the loop. Do you think we're done?

