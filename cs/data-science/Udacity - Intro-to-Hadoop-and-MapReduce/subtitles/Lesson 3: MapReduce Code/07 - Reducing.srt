1
00:00:00,180 --> 00:00:03,010
The next phase is the reducer. In our case we

2
00:00:03,010 --> 00:00:06,740
only have a single reducer because that's the HADOOP default. It

3
00:00:06,740 --> 00:00:10,459
will get all the keys. The reducer is going to

4
00:00:10,459 --> 00:00:13,430
get all the data coming in something like this. If we

5
00:00:13,430 --> 00:00:16,309
had specified more than one reducer, each would receive some

6
00:00:16,309 --> 00:00:20,170
of the keys along with the values for those particular keys.

7
00:00:20,170 --> 00:00:22,950
We're using HADOOP streaming here because we want to write our code

8
00:00:22,950 --> 00:00:25,600
in PYTHON. Hadoop streaming allows you to write your mappers and

9
00:00:25,600 --> 00:00:28,420
reducers in any language, rather than forcing you to

10
00:00:28,420 --> 00:00:30,890
use Java. But the way reducers get their data

11
00:00:30,890 --> 00:00:32,950
is a little bit tricky. As you can see,

12
00:00:32,950 --> 00:00:36,180
the data comes in streamed as lines of text.

13
00:00:36,180 --> 00:00:40,120
Each line contains a store name and the cost.

14
00:00:40,120 --> 00:00:43,810
The store names are sorted, which we're guaranteed because

15
00:00:43,810 --> 00:00:46,370
of the shuffle and sort. So we know that

16
00:00:46,370 --> 00:00:50,610
all lines for, say, Miami, are together. So if

17
00:00:50,610 --> 00:00:54,540
we receive our data like this, what variables might we need to keep track of to

18
00:00:54,540 --> 00:00:59,415
calculate the total sales per store? Do we need to know the cost of the previous

19
00:00:59,415 --> 00:01:03,850
line? Do we need to store the current cost? Or how about the total sales per

20
00:01:03,850 --> 00:01:06,380
store? Do we need to save the previous

21
00:01:06,380 --> 00:01:08,860
store, or the store that we're currently working with?

