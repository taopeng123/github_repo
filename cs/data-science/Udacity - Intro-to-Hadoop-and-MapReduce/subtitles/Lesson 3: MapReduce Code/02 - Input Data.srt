1
00:00:00,200 --> 00:00:02,650
So, let's take a closer look at our input data.

2
00:00:02,650 --> 00:00:05,920
Remember that each mapper processes a portion of the input data.

3
00:00:05,920 --> 00:00:07,890
And, each one will be given a line at a

4
00:00:07,890 --> 00:00:11,750
time. The lines look like this. The mapper needs to take

5
00:00:11,750 --> 00:00:14,650
that line, and extract the information it needs. Often, when

6
00:00:14,650 --> 00:00:17,650
we're dealing with text, it's pretty free-form. So we'd use something

7
00:00:17,650 --> 00:00:21,560
like a regular expression. But in this case, it's regular, it's

8
00:00:21,560 --> 00:00:25,680
tab limited. So we can split the line on tab and

9
00:00:25,680 --> 00:00:29,420
extract the values. In this example, they're date,

10
00:00:29,420 --> 00:00:33,800
time, store name, product type, cost, and method

11
00:00:33,800 --> 00:00:36,440
of payment. Let's say you've been asked to

12
00:00:36,440 --> 00:00:40,030
find the total sales per store. How would you

13
00:00:40,030 --> 00:00:42,440
choose an intermediate key and value? Could it

14
00:00:42,440 --> 00:00:45,970
be the time and the store name? Or the

15
00:00:45,970 --> 00:00:51,250
cost of the item and the store name? Or rather the store name as a key and

16
00:00:51,250 --> 00:00:53,840
the cost? Or the store name and the

17
00:00:53,840 --> 00:00:56,780
product type. Remember that our line looks like this.

