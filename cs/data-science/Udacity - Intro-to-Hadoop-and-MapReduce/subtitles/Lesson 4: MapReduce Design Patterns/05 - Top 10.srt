1
00:00:00,250 --> 00:00:03,220
An interesting application of MapReduce and these design patterns

2
00:00:03,220 --> 00:00:07,010
is making top N record lists. These are especially useful

3
00:00:07,010 --> 00:00:10,240
if you work at a company like BuzzFeed. But even

4
00:00:10,240 --> 00:00:13,370
if you don't, you still might want to use these. And

5
00:00:13,370 --> 00:00:15,640
in this question we're going to, in particular, find the top

6
00:00:15,640 --> 00:00:19,190
ten longest forum posts. Now, with a relational data base

7
00:00:19,190 --> 00:00:22,880
management system you just first sort your data. In this

8
00:00:22,880 --> 00:00:26,810
case forum posts. And then pick the top N records.

9
00:00:26,810 --> 00:00:30,840
But with MapReduce, this just won't work. The

10
00:00:30,840 --> 00:00:34,100
data isn't sorted and it's processed in several machines.

11
00:00:34,100 --> 00:00:36,100
So, instead, what we're going to have to do

12
00:00:36,100 --> 00:00:39,640
is have each mapper generate a top N list

13
00:00:40,730 --> 00:00:42,700
and then send these local lists to the

14
00:00:42,700 --> 00:00:46,480
reducers who can then find the global top N.

15
00:00:47,580 --> 00:00:49,480
It's sort of like what happens in the Olympics. If

16
00:00:49,480 --> 00:00:51,830
you want to find the top three I don't know,

17
00:00:51,830 --> 00:00:57,330
swimmers, every country needs to send their top three swimmers

18
00:00:57,330 --> 00:01:02,320
to the Olympics. And then, through a competition, figure who globally

19
00:01:02,320 --> 00:01:05,372
the top three swimmers are. Anyways, let's go ahead and find

20
00:01:05,372 --> 00:01:08,220
the top ten longest forum posts in the Udacity forum data.

