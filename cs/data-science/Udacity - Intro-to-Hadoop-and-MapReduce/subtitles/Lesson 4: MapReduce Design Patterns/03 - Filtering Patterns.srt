1
00:00:00,540 --> 00:00:03,130
So, filtering patterns all have one thing in

2
00:00:03,130 --> 00:00:06,870
common. They don't change the actual records of our

3
00:00:06,870 --> 00:00:12,060
data. So by that I mean, if we have some long list of data with lots and

4
00:00:12,060 --> 00:00:17,060
lots of records. One, two, three, so on.

5
00:00:17,060 --> 00:00:19,700
A filtering pattern will, go through the entire data

6
00:00:19,700 --> 00:00:22,970
set and just. Decide which data to keep, and

7
00:00:22,970 --> 00:00:25,830
which to throw away. And so if this giant

8
00:00:25,830 --> 00:00:28,740
list is the input this smaller list, this

9
00:00:28,740 --> 00:00:31,090
subset of the original data would be the

10
00:00:31,090 --> 00:00:33,550
output. And there's a lot of ways filtering

11
00:00:33,550 --> 00:00:37,150
can happen. We can have a simple filter, which

12
00:00:37,150 --> 00:00:41,160
is basically just a function which returns keep

13
00:00:41,160 --> 00:00:44,700
or throw away for. Each of these records, and

14
00:00:44,700 --> 00:00:47,580
for the records that get kept. Well, they

15
00:00:47,580 --> 00:00:50,880
wind up in the output. There's a bloom filter,

16
00:00:50,880 --> 00:00:53,360
which we're actually not going to talk much about, but

17
00:00:53,360 --> 00:00:56,200
it's worth knowing about, because this is a much more

18
00:00:56,200 --> 00:01:00,240
efficient probabilistic filter. That comes with some trade-offs and you

19
00:01:00,240 --> 00:01:01,880
should check out the instructor notes if you want to read

20
00:01:01,880 --> 00:01:05,580
more. We also have things like sampling. Which is just

21
00:01:05,580 --> 00:01:08,250
a way to make a smaller data set from a

22
00:01:08,250 --> 00:01:12,420
large data set. By pulling out some sample, maybe the

23
00:01:12,420 --> 00:01:15,970
highest values of a particular field. If we want to pull

24
00:01:15,970 --> 00:01:21,120
out a representative sample, one that we think matches the characteristics

25
00:01:21,120 --> 00:01:25,980
of the original data. We can use random sampling. And finally, we can

26
00:01:25,980 --> 00:01:29,940
use this idea of filtering to find the, I don't know, top

27
00:01:29,940 --> 00:01:33,830
ten of something, and that's an exercise we're actually going to do. Click.

