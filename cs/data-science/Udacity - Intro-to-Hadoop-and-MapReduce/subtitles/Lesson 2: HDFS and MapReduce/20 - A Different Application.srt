1
00:00:00,450 --> 00:00:02,840
The example we just talked about was calculating the

2
00:00:02,840 --> 00:00:05,530
total sales per store. And there are lots of

3
00:00:05,530 --> 00:00:07,680
other things we can do with MapReduce that actually

4
00:00:07,680 --> 00:00:12,780
quite similar to that, for example, log processing. Say

5
00:00:12,780 --> 00:00:16,910
we had a set of logs from a web server which looked like this. You may want to

6
00:00:16,910 --> 00:00:19,700
know how many times each page has been hit.

7
00:00:20,810 --> 00:00:25,630
Well really, it's similar to calculating the sales per store.

8
00:00:25,630 --> 00:00:31,990
Your mapper will read a line of the log at a time. And it will extract

9
00:00:31,990 --> 00:00:39,520
the name of the page. Such as, index.php. It's intermedia data. We'll have

10
00:00:39,520 --> 00:00:45,470
the name of the page as the key. The intermediate data we use index.php

11
00:00:45,470 --> 00:00:50,750
as the key and 1 as the value. This is saying that that page was

12
00:00:50,750 --> 00:00:53,560
accessed one time. Then we'll continue into the other

13
00:00:53,560 --> 00:00:56,460
lines of the file just like that. When all the

14
00:00:56,460 --> 00:00:59,870
mappers are done the reducers will get the keys,

15
00:00:59,870 --> 00:01:02,710
which are just all the pages on our website, and

16
00:01:02,710 --> 00:01:04,760
a list of values which will be a list

17
00:01:04,760 --> 00:01:09,150
of ones, meaning how many times that page was accessed.

18
00:01:09,150 --> 00:01:11,830
The reducers can add up the ones to know how

19
00:01:11,830 --> 00:01:15,900
many total hits that page had on our web site.

20
00:01:15,900 --> 00:01:18,360
Simple, but far more efficient, than writing

21
00:01:18,360 --> 00:01:20,650
a standalone program to go through all

22
00:01:20,650 --> 00:01:23,140
the logs start to finish. Especially, if

23
00:01:23,140 --> 00:01:25,690
we could have hundreds of gigabytes or more.

