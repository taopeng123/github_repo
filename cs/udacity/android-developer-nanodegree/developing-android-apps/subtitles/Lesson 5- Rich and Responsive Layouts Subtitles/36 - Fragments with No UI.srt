0:00:00.230,0:00:03.650
The final advantage of fragments, doesn't involve user interfaces at

0:00:03.650,0:00:07.505
all. As you know, as visual components, activities are destroyed and

0:00:07.505,0:00:10.970
re-created, whenever the device configuration changes. Most notably, when the

0:00:10.970,0:00:14.200
screen orientation switches. That makes sense, because there's a good chance

0:00:14.200,0:00:16.200
we'll want to create a different layout, to better suit the

0:00:16.200,0:00:19.000
new configuration. But if we can use fragments to break up

0:00:19.000,0:00:22.340
visual activity modules, and find out logical ones as well,

0:00:22.340,0:00:25.270
it turns out we can do exactly that. And because these

0:00:25.270,0:00:27.770
fragments are non-visual, there's no need to recreate them

0:00:27.770,0:00:30.640
every time the UI needs updating. Within the onCreate

0:00:30.640,0:00:35.640
handler of your non-UI fragment, call setRetainInstance, passing in

0:00:35.640,0:00:40.220
true, and return null in your onCreate view handler.

0:00:40.220,0:00:42.550
Then, once the parent activity is created, you can

0:00:42.550,0:00:45.180
kick off any connections, threads, or tasks that are

0:00:45.180,0:00:47.520
bound to the lifetime of the activity, which don't

0:00:47.520,0:00:49.750
need to be interrupted every time the device rotates.
