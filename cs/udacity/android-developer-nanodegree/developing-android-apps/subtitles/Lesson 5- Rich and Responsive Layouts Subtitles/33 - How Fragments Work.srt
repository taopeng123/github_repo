0:00:01.090,0:00:04.000
So if we treat fragments as mini activities, each with

0:00:04.000,0:00:07.510
its own independent life cycle in UI, how does that compare

0:00:07.510,0:00:10.200
to the life cycle of a real activity? Well as

0:00:10.200,0:00:13.490
you might expect the basic life cycle events are much the

0:00:13.490,0:00:16.140
same as the parent activity, and as it moves through

0:00:16.140,0:00:20.288
the cycles of starts, resumes, pauses, and stops those same life

0:00:20.288,0:00:23.930
cycle events will be triggered within the fragment itself. So,

0:00:23.930,0:00:26.140
in most cases, you can simply move anything that you would

0:00:26.140,0:00:29.080
have put into the activities life cycle handles,

0:00:29.080,0:00:32.259
into the corresponding fragment handles. With, of course, a

0:00:32.259,0:00:35.460
couple of exceptions. Rather than building your UI here

0:00:35.460,0:00:40.990
and onCreate, fragments introduced a new event specifically for

0:00:40.990,0:00:44.260
this. OnCreate view is where you construct or inflate

0:00:44.260,0:00:46.470
your UI, hook up to any data sources, and

0:00:46.470,0:00:48.440
return it to the parent activity, which can then

0:00:48.440,0:00:51.692
integrate it into its view hierarchy. There's a corresponding

0:00:51.692,0:00:54.630
onDestroy view handler, which is called immediately before the

0:00:54.630,0:00:57.240
fragment is added to the backstack, independent of the

0:00:57.240,0:01:00.060
parent activity. Now keep in mind that the fragment

0:01:00.060,0:01:04.450
manager can add any fragment transactions adding, removing, or replacing

0:01:04.450,0:01:06.720
fragments to the back stack, with a single parent

0:01:06.720,0:01:10.040
activity's actives. So a fragment can move through this

0:01:10.040,0:01:13.484
cycle multiple times independent of the host activity. So

0:01:13.484,0:01:16.570
onDestroy view is, where you should clean up any resources,

0:01:16.570,0:01:19.870
specifically related to the UI, such as bitmaps in

0:01:19.870,0:01:23.470
memory, cursors to data, anything like that to help ensure

0:01:23.470,0:01:26.060
that your app's memory footprint isn't bloated by data that's

0:01:26.060,0:01:29.950
not needed when the fragment isn't visible. Now as soon

0:01:29.950,0:01:32.860
as the fragment is returned from the back stack, onCreate

0:01:32.860,0:01:35.360
view is called, and you can re-create the UI and

0:01:35.360,0:01:38.820
reconnect data sources before your fragment transitions through the rest

0:01:38.820,0:01:41.810
of the life cycle to become active again. And because

0:01:41.810,0:01:43.870
a fragment can only exist within an activity,

0:01:45.480,0:01:47.280
we also need callbacks to tell us when a

0:01:47.280,0:01:51.900
fragment is attached and detached from its parent. OnAttach

0:01:51.900,0:01:53.930
is your opportunity to get a reference to the

0:01:53.930,0:01:57.360
parent activity. While, onDetach is the last thing that

0:01:57.360,0:02:01.430
happens, even after your fragment has technically been destroyed.

0:02:01.430,0:02:03.779
Now, the final piece of the puzzle is onActivity

0:02:03.779,0:02:07.060
created. This notifies our fragment that the parent activity

0:02:07.060,0:02:09.990
has completed its own create handler and represents the point

0:02:09.990,0:02:12.900
at which we can safely interact with its UI. Potentially

0:02:12.900,0:02:16.460
including other fragments. Now, just like the activity lifecyle we

0:02:16.460,0:02:19.410
discussed in lesson three, once the fragment is no longer

0:02:19.410,0:02:22.040
visible, there's a chance it will be terminated with no

0:02:22.040,0:02:25.730
further code being executed. That can happen, after onStop, in

0:02:25.730,0:02:28.680
the case of the activity being terminated while the fragment

0:02:28.680,0:02:32.270
is part of that activity's view hierarchy, or after onDestroy

0:02:32.270,0:02:34.360
view, if the fragment has already been placed

0:02:34.360,0:02:36.500
in the back stack, once the activity is destroyed.
