0:00:00.650,0:00:02.960
The final step in your custom view creation

0:00:02.960,0:00:05.860
is adding interactivity. You can listen for user

0:00:05.860,0:00:08.790
input events including key presses, trackball movement, and

0:00:08.790,0:00:12.570
most importantly, screen touch events, all by overriding the

0:00:12.570,0:00:15.950
corresponding event handlers. Android supports tracking of up

0:00:15.950,0:00:18.570
to 11 individual contact points in what we

0:00:18.570,0:00:21.710
like to call, jazz hands mode which enables

0:00:21.710,0:00:25.550
you to complete complex and multi-finger interaction models. Now,

0:00:25.550,0:00:28.400
there's really no interaction required for a wind gauge, but

0:00:28.400,0:00:31.130
you can find out more about handling input events by checking

0:00:31.130,0:00:34.170
the motion event docs or the developer guide describing how to

0:00:34.170,0:00:37.890
create your own, fully interactive custom views, both from the [UNKNOWN]

0:00:37.890,0:00:41.110
below. Now, be careful not to let this new found power

0:00:41.110,0:00:44.220
go to your head. By definition, your users will have never

0:00:44.220,0:00:47.900
encountered your brand spanking new control. So learning how to use

0:00:47.900,0:00:50.550
it is going to add friction to the use of your app.

0:00:50.550,0:00:53.650
At the very least, it should behave consistently with the rest of the system

0:00:53.650,0:00:55.310
and you should avoid creating your own

0:00:55.310,0:00:58.680
versions of system controls. If it looks kind of

0:00:58.680,0:01:03.140
like a button and works kind of like a button, you should probably just go ahead

0:01:03.140,0:01:07.620
and use a button, but I think this non sequitur has gone on long enough.
