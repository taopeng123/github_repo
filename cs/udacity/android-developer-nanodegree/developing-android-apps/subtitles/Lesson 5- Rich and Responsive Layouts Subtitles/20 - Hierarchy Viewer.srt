0:00:00.300,0:00:03.240
Here you can see hierarchy view lets you select from

0:00:03.240,0:00:06.400
a list of devices with physical and virtual on the left,

0:00:06.400,0:00:08.720
each of which then contains each of the running activities

0:00:08.720,0:00:12.880
and applications running on that device. You simply select the activity

0:00:12.880,0:00:15.810
from the application that you want to profile. Then, hit

0:00:15.810,0:00:19.430
the Load View hierarchy button here, and you'll see a representation

0:00:19.430,0:00:23.250
of the selected activity's entire view hierarchy represented here in the

0:00:23.250,0:00:25.400
Tree View, from left to right. You can see that the

0:00:25.400,0:00:28.780
entire hierarchy is also shown here, in the overview and the layout

0:00:28.780,0:00:32.030
itself is shown in a wire frame here. Clicking on any view,

0:00:32.030,0:00:34.910
at any point within the hierarchy, will show you what is displayed,

0:00:34.910,0:00:37.889
showing us the number of views which are contained within the hierarchy

0:00:37.889,0:00:42.310
from this point onwards. You can also obtain the performance metrics to

0:00:42.310,0:00:45.230
find out how long it takes to measure, layout and draw each

0:00:45.230,0:00:48.480
element of the hierarchy. It's a powerful tool and you can find

0:00:48.480,0:00:50.750
out more about how to use it to optimize your layouts and

0:00:50.750,0:00:52.720
views in the videos and guides linked to from the

0:00:52.720,0:00:55.680
instructor notes below. For now, note that we can use

0:00:55.680,0:00:59.230
it to find surprisingly deeply nested layouts that need to

0:00:59.230,0:01:01.780
be flattened. For example, here we have a layout we

0:01:01.780,0:01:05.150
can describe using one of two techniques. One solution is

0:01:05.150,0:01:09.530
using two nested linear layouts. But a better solution would

0:01:09.530,0:01:12.576
be using a relative layout. The relative layout is one

0:01:12.576,0:01:16.010
level shallower. Another tip is to avoid using the frame layout

0:01:16.010,0:01:18.200
as the root for layout that will always be inserted

0:01:18.200,0:01:21.940
as a child into another one. In these circumstances, the merge

0:01:21.940,0:01:24.790
tag is a better alternative. This will be eliminated when the

0:01:24.790,0:01:28.090
layout is included into the parents hierarchy. To help you remember

0:01:28.090,0:01:30.630
all of these tips and tips, Android has a powerful static

0:01:30.630,0:01:33.410
analysis tool called Lint. As you can see here in the

0:01:33.410,0:01:36.790
lint window, in addition to the layout warnings we've already talked

0:01:36.790,0:01:37.990
about, it also checks from

0:01:37.990,0:01:40.990
everything from accessibility problems, missing translations,

0:01:40.990,0:01:44.210
and hard coded strings. You can find all the things lint checks

0:01:44.210,0:01:47.510
for at the developer tools page linked to in the instructor notes
