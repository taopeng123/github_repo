0:00:00.000,0:00:03.660
Modify onCreate to create[br]the LocationEntry database table using

0:00:03.660,0:00:06.022
the constants we defined[br]in the contract.

0:00:06.022,0:00:08.248
The good news is that[br]this is a similar but

0:00:08.248,0:00:11.269
simpler statement than what[br]we have in WeatherEntry.

0:00:11.269,0:00:15.286
You'll be creating and executing[br]a string that stores an SQLI command.

0:00:15.286,0:00:18.526
You want to make sure to use[br]the correct data types for each column.

0:00:18.526,0:00:21.405
Also, make sure that you[br]have the right constraints.

0:00:21.405,0:00:24.005
In general, for[br]all the model of the weather table.

0:00:24.005,0:00:28.405
With the exception of the ID,[br]all columns must be defined as not null.

0:00:28.405,0:00:32.078
The location query should[br]additionally be defined as unique or

0:00:32.078,0:00:35.068
coordinates are real, or[br]floating point values.

0:00:35.068,0:00:38.480
You should consider adding logging[br]statements to print the SQLI statement,

0:00:38.480,0:00:40.327
and verify that it[br]looks as you intended.

0:00:40.327,0:00:43.358
Pay close attention to spaces,[br]parenthesis, and commas.

0:00:43.358,0:00:46.180
Once you have finished writing[br]the SQL to create the table,

0:00:46.180,0:00:49.512
continue to run test create TestcreateDB[br]from within the test DB, and

0:00:49.512,0:00:52.239
let it guide you as to how to[br]fix your creation statement.

0:00:52.239,0:00:55.997
Once you have finished coding,[br]I recommend looking at our solution,

0:00:55.997,0:00:58.172
just in case our test missed something.
