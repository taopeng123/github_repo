0:00:00.880,0:00:03.650
The active life cycle is when your activity is in the foreground and

0:00:03.650,0:00:10.600
has focus. Here it is actively receiving input from user events and

0:00:10.600,0:00:16.140
no other activities are obscuring it. On [UNKNOWN] and

0:00:16.140,0:00:20.570
the active lifetime ends as soon as your activity is partially obscured,

0:00:20.570,0:00:27.120
like in this example. [SOUND] You can see here the permissions dialogue

0:00:27.120,0:00:31.828
is displayed in front of Google Play for

0:00:31.828,0:00:36.826
an app in store. Or the same thing happens when you have another activity trying

0:00:36.826,0:00:41.290
to fulfill an implicit intent and the user needs to make a selection. So

0:00:41.290,0:00:43.790
to make efficient use of limited resources,

0:00:43.790,0:00:46.590
you'll want to use these signals to adjust your app's resource burden.

0:00:47.660,0:00:52.140
So, most updates through a UI, can be paused when this lifetime ends,

0:00:52.140,0:00:57.400
which is announced by onPause. But as you see, the app is still visible, so

0:00:57.400,0:01:01.650
you shouldn't pause any processes that are drawing your UI. The visible

0:01:01.650,0:01:05.459
lifetime on the other hand continues whenever the app is at all visible and

0:01:05.459,0:01:11.112
ends as soon as it's completely obscured by another app. Like this.

0:01:11.112,0:01:16.844
[SOUND] At this point, our app is moved to the background.

0:01:16.844,0:01:22.000
So when you see on stop, you know the user can't see your app at all. So, while

0:01:22.000,0:01:26.410
OnCreate and OnDestroy will be called at most once, each time your app is run,

0:01:26.410,0:01:29.740
these handlers are likely to be called many times, while the app is running.

0:01:29.740,0:01:34.310
Now, this is where things get a little different. On almost al platforms,

0:01:34.310,0:01:38.260
app life cycles are deterministic. Generally, you'll start a program and

0:01:38.260,0:01:42.140
it'll keep running, until it either completes or the user cancels it. You look

0:01:42.140,0:01:45.660
at traditional desktop development that means your app keeps running until your

0:01:45.660,0:01:50.280
user chooses quit or exit from the file menu. At that point you can say stay and

0:01:50.280,0:01:55.350
free resources. But as we know on Android life cycles work a little differently.

0:01:55.350,0:01:58.010
So, let's take a closer look at exactly how that works now.
