0:00:00.240,0:00:01.350
Let's take a look at what it will

0:00:01.350,0:00:05.630
take to implement a very basic SyncAdapter. We're going

0:00:05.630,0:00:09.430
to write two services. Each service serves the primary

0:00:09.430,0:00:12.530
purpose of delivering an object that represents an Android

0:00:12.530,0:00:15.780
Binder interface to one of the system frameworks.

0:00:15.780,0:00:19.400
A Binder is actually the low-level glue that implements

0:00:19.400,0:00:23.400
cross process communication in Android. You've been using Binders

0:00:23.400,0:00:26.750
every time you talk to an Android system service.

0:00:26.750,0:00:30.520
Intents and content providers are just high-level abstractions on

0:00:30.520,0:00:33.600
top of the Binder interface. There's a whole language known

0:00:33.600,0:00:37.290
as AIDL to help define these interfaces. We're not

0:00:37.290,0:00:39.710
going to cover all this here, but there's a lot

0:00:39.710,0:00:42.620
more you can do with services and Binders. One

0:00:42.620,0:00:45.370
more thing before we start, we're going to define an

0:00:45.370,0:00:48.960
Authenticator Service and an Authenticator. But it will only

0:00:48.960,0:00:51.780
be used by the Android accounts framework to allow us

0:00:51.780,0:00:55.320
to create an account. SyncAdaptor's need an account.

0:00:55.320,0:00:57.300
And the account framework requires that there be

0:00:57.300,0:01:00.780
an authenticator delivered by an authenticator Service. You'll

0:01:00.780,0:01:02.890
see that our authenticator is just a series

0:01:02.890,0:01:05.250
of stubs, with exceptions that get thrown for

0:01:05.250,0:01:07.290
each call just to prove that it isn't

0:01:07.290,0:01:12.210
really used. One final note. This section approximately

0:01:12.210,0:01:18.060
follows the online training at developer.android.com around sync adapters.

0:01:18.060,0:01:19.860
Feel free to look there if you have

0:01:19.860,0:01:22.680
any more questions. We're going to create a new

0:01:22.680,0:01:27.550
package, sync, to house all of this goodness.

0:01:27.550,0:01:31.210
And a new class file for our authenticator. This

0:01:31.210,0:01:33.200
code that we're about to paste in really

0:01:33.200,0:01:36.920
just comes from the developer.android.com website, and as I

0:01:36.920,0:01:40.660
mentioned earlier it's just a stub. You can tell

0:01:40.660,0:01:43.100
because we throw exceptions for calling any of the

0:01:43.100,0:01:46.970
functions except for the constructor. And one

0:01:46.970,0:01:51.830
more file. Create SunshineAuthenticatorService. This is more code

0:01:51.830,0:01:54.170
that is written for us. It allows

0:01:54.170,0:01:57.260
the account manager to access the empty authenticator

0:01:57.260,0:02:03.430
that we just pasted in. Now we add the account type in our strings.xml. The

0:02:03.430,0:02:05.920
account type string suggests that it is specific

0:02:05.920,0:02:08.820
to our app. If we had many applications

0:02:08.820,0:02:11.400
using the same account, we might want

0:02:11.400,0:02:14.610
to create just an example.com account. We'll also

0:02:14.610,0:02:16.140
begin to clean things up and add

0:02:16.140,0:02:19.370
a content authority string. Note that this matches

0:02:19.370,0:02:24.390
our content provider string. We'll fix the XML file later so they both use

0:02:24.390,0:02:29.081
this same string. We create a new XML resource file, filename

0:02:29.081,0:02:34.950
authenticator.xml, with root element account-authenticator.

0:02:34.950,0:02:38.620
And you probably noticed that SunshineAuthenticatorService is

0:02:38.620,0:02:40.680
actually a service that needs to be registered

0:02:40.680,0:02:44.810
with a package manager in AndroidManifest.xml. Here's

0:02:44.810,0:02:47.940
some more pasty goodness that does just that.

0:02:47.940,0:02:50.770
Now be very, very careful. These strings

0:02:50.770,0:02:53.790
all have to match precisely. The error messages

0:02:53.790,0:02:56.610
that the system gives for having incorrect accounts

0:02:56.610,0:02:59.960
are not necessarily intuitive. And with that you

0:02:59.960,0:03:03.120
should be able to create valid accounts. Once again,

0:03:03.120,0:03:05.530
this is all just so that the SyncAdapter can be

0:03:05.530,0:03:08.350
tied to an account. You don't actually use this

0:03:08.350,0:03:12.052
at all. All right, let's tweak our provider tag in

0:03:12.052,0:03:15.410
the manifest. We're going to add the syncable attribute.

0:03:15.410,0:03:17.720
This just lets Android know that we're planning to synchronize

0:03:17.720,0:03:20.799
the content provider with the server. Also, we'll set

0:03:20.799,0:03:25.220
android:exported equals false. We had it at the default setting.

0:03:25.220,0:03:28.750
Which means that other apps could see our content. Finally,

0:03:28.750,0:03:31.530
let's change the authority to use our new string. Now

0:03:31.530,0:03:34.930
for some additional permissions. We need to be able to

0:03:34.930,0:03:38.790
read and write sync settings. That makes sense. We also

0:03:38.790,0:03:41.810
have to authenticate accounts, even though we're not really using

0:03:41.810,0:03:45.420
them for anything. None of these permissions are ones users

0:03:45.420,0:03:48.530
should be concerned about. But as developers, we always want

0:03:48.530,0:03:51.780
to be careful when we have to add new permissions.

0:03:51.780,0:03:54.780
Let's create the SunshineSyncAdapter file itself inside

0:03:54.780,0:03:57.610
of sync, which extends the abstract threaded sync

0:03:57.610,0:04:00.683
adapter class. Hit Ctrl+I and then Ctrl+O

0:04:00.683,0:04:04.900
to implement the necessary abstract methods in constructor.

0:04:04.900,0:04:07.170
We'll use the first constructor. We'll fill

0:04:07.170,0:04:09.330
this out later. As you may recall, the

0:04:09.330,0:04:12.650
sync adaptor pattern requires yet another service. So

0:04:12.650,0:04:15.645
we're going to create another Java class called SunshineSyncService.

0:04:16.730,0:04:20.670
This class is used to deliver the sync adapter Binder to the sync manager.

0:04:21.860,0:04:24.690
The Binder is implemented for us by

0:04:24.690,0:04:28.520
the abstract threaded sync adapter class. And returned

0:04:28.520,0:04:31.560
in the getSyncAdapterBinder method. And now, we

0:04:31.560,0:04:35.750
need one more XML file. Create syncadapter.xml with

0:04:35.750,0:04:39.120
root element sync-adapter. Once again, this XML

0:04:39.120,0:04:42.590
file defines the settings associated with our sync-adapter.

0:04:42.590,0:04:45.290
Including it's content authority. The account type that it

0:04:45.290,0:04:48.890
syncs. Whether or not it's user visible. Whether it

0:04:48.890,0:04:52.180
supports uploading, which changes the way the content provider

0:04:52.180,0:04:56.280
interacts with the sync adapter. Allowing parallel syncs and is

0:04:56.280,0:04:59.400
always syncable. These settings make sense for this particular

0:04:59.400,0:05:02.350
application, and I bet you know what comes next. You're

0:05:02.350,0:05:05.100
right. You have to register the sync adapter service

0:05:05.100,0:05:08.140
with the package manager. And therefore we have to create

0:05:08.140,0:05:12.540
more manifest entries, containing some important metadata. Most

0:05:12.540,0:05:15.602
importantly, links to the file we just created. All

0:05:15.602,0:05:19.040
right, now we're getting close. Let's start working

0:05:19.040,0:05:21.690
on the sync adapter, itself. We'll start with a

0:05:21.690,0:05:24.820
helper function to get the dummy sync account

0:05:24.820,0:05:27.760
and make sure that it has been created. Then,

0:05:27.760,0:05:30.560
we'll add another helper function to our sync adaptor,

0:05:30.560,0:05:32.510
to make it easier to test our sync adaptor.
