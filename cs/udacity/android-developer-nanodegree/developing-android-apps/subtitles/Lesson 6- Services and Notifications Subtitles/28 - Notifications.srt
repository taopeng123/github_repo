0:00:00.590,0:00:03.070
One of the most powerful features of Android, since the

0:00:03.070,0:00:05.550
start of the platform has been the ability to deliver

0:00:05.550,0:00:09.100
timely notifications to users. We're going to add a simple

0:00:09.100,0:00:12.480
one to our weather app. This simple notification will show the

0:00:12.480,0:00:16.730
weather icon for the forecast, the forecast text, and the

0:00:16.730,0:00:19.420
high and low temperature for the day. One of the key

0:00:19.420,0:00:21.870
things we wanted to point out is how not to

0:00:21.870,0:00:25.920
be spammy with our notification. Our app will display at most

0:00:25.920,0:00:29.080
a single notification. It really wouldn't make sense if these

0:00:29.080,0:00:33.120
notifications stacked up anyhow. They don't display enough information to

0:00:33.120,0:00:36.250
give context. The key thing with notifications is to deliver

0:00:36.250,0:00:39.970
a useful morsel of information, formatted in a standard way, so

0:00:39.970,0:00:42.760
that it harmonizes with the rest of the system. We'll

0:00:42.760,0:00:45.440
start by adding a string for the preference for the

0:00:45.440,0:00:48.140
last time we sent a notification to the user. As

0:00:48.140,0:00:51.210
well as a format string for the body of the notification.

0:00:51.210,0:00:54.610
Let's implement the notification inside of our sync adapter.

0:00:54.610,0:00:56.670
Our notification will be based upon what is in

0:00:56.670,0:01:00.100
the database. So, we'll create projection and column indices

0:01:00.100,0:01:04.110
value in our sync adapter, for the weather id. Description,

0:01:04.110,0:01:07.320
max and then temperature, let's add a function to

0:01:07.320,0:01:10.020
notify us of the weather. We'll add some additional

0:01:10.020,0:01:13.430
constants up here. One for day in mili's and

0:01:13.430,0:01:16.220
one so that we an use the same notification ID.

0:01:16.220,0:01:19.060
Reusing the notification ID means that our application will only

0:01:19.060,0:01:23.260
post at most one notification. And then finally, we'll call

0:01:23.260,0:01:25.750
this function at a reasonable place within our on perform

0:01:25.750,0:01:29.540
sync function within our sync adapter. Inside of notify weather, we'll

0:01:29.540,0:01:31.761
check to see whether or not, we've actually shown notification

0:01:31.761,0:01:36.010
that day. If we haven't, then we'll talk to the database.

0:01:36.010,0:01:38.140
Get a cursor for the current resolver for the current

0:01:38.140,0:01:41.320
day, and then fetch the data, but one thing were not

0:01:41.320,0:01:45.770
doing is actually showing the notification. Now all right, were getting near

0:01:45.770,0:01:48.970
the end. Implement a weather notification,

0:01:48.970,0:01:53.380
build our notification using Notification Compat.builder

0:01:53.380,0:01:59.910
pointing to a Pending Intent built by the v4 compatible. TaskStackBuilder and

0:01:59.910,0:02:03.770
sent with the NotificationManager. Hint: an

0:02:03.770,0:02:06.860
explicit intent to our main activity is

0:02:06.860,0:02:11.280
a good idea here. There's lots of documentation on this you'll want to read.
