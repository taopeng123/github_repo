0:00:00.280,0:00:02.680
In the documentation for Async Task, we can

0:00:02.680,0:00:04.440
scroll down to the section that talks about

0:00:04.440,0:00:08.380
protected methods. Here we see that different methods

0:00:08.380,0:00:10.540
are called on the UI thread versus on the

0:00:10.540,0:00:13.870
background thread. It also contains information on what

0:00:13.870,0:00:16.450
order these methods are called in. Relative to the

0:00:16.450,0:00:21.020
doInBackground method. For example, onPreExecute gets called on

0:00:21.020,0:00:25.660
the UI thread before doInBackground. So with that information

0:00:25.660,0:00:28.470
now, we can populate the answers to our quiz. As

0:00:28.470,0:00:31.720
we mentioned before, onPreExecute happens on the main thread. And

0:00:31.720,0:00:35.130
here you can do any setup work. Then doInBackground happens

0:00:35.130,0:00:38.390
on the background thread. While this is running, you can actually

0:00:38.390,0:00:41.090
call publishProgress as many times as you want, so that

0:00:41.090,0:00:44.450
you can pass information to the UI. So that it

0:00:44.450,0:00:47.380
can update an then tell the user that a certain

0:00:47.380,0:00:50.640
percentage of the work is done. Each time this is called,.

0:00:50.640,0:00:54.690
It triggers onProgressUpdate with some information. Then,

0:00:54.690,0:00:57.060
you can show a loading indicator in

0:00:57.060,0:01:00.700
your UI that says something's 10% done, 50% done, 100% done. And all this

0:01:01.860,0:01:06.000
happens on the main thread. And then, once all of this is complete in

0:01:06.000,0:01:08.450
the background thread, then it calls onPostExecute

0:01:08.450,0:01:09.980
with the results on the main thread.
