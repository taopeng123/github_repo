Open up the Developer API Guide for Settings, if you want to follow along.  If you've pondered it carefully and you've decided you really want this to be a setting, this is what you do next. Android provides a way to display a hierarchy of preferences, including headers, such as the ones shown here.  The value of the preference is called the preference summary, and that's seen here. It looks almost like the subtitle text. The preference also provides UI.  To allow users to modify that setting. You just need to supply the strings, but you don't have to implement the UI like the spinner here.  Common preference types are the check box preference, list preference, edit text preference. We can see some examples in the settings app under developer options. Here's a bunch of preferences. This is an example of a check box preference. This is an example of a list preference where you have different radio button options here. Once the user changes the setting, it gets saved in the default share preferences file. This stores a bunch of key value pairs of primitive data. An example integer preference could be how many days of e-mail history should be saved locally on the device. You could have a string stored integer preferences for what the currently selected account and device is. Then at any time you can fetch the value of this shared preferences, as long as you pass in the name of the key that you want.  You can also use shared preferences outside the context of settings as well.  This information is located in the developer API guide, for storage options, which is also linked below.
